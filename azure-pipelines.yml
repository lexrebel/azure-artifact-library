# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  AZURE_ARTIFACTS_ENV_ACCESS_URI: $(AZURE_ARTIFACTS_ENV_ACCESS_URI)
  AZURE_ARTIFACTS_ENV_ACCESS_USERNAME: $(AZURE_ARTIFACTS_ENV_ACCESS_USERNAME)
  AZURE_ARTIFACTS_ENV_ACCESS_TOKEN: $(AZURE_ARTIFACTS_ENV_ACCESS_TOKEN)

steps:
- task: Gradle@2
  inputs:
    displayName: Testes unitarios
    gradleWrapperFile: 'gradlew'
    tasks: 'test'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false
- task: Gradle@2
  inputs:
    displayName: Build
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false
- task: Gradle@2
  inputs:
    displayName: Publish
    gradleWrapperFile: 'gradlew'
    tasks: 'publish'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false
